from _typeshed import Incomplete

class ProviderException(Exception): ...

class Provider:
    slug: Incomplete
    request: Incomplete
    def __init__(self, request) -> None: ...
    @classmethod
    def get_slug(cls): ...
    def get_login_url(self, request, next: Incomplete | None = ..., **kwargs) -> None: ...
    def get_app(self, request, config: Incomplete | None = ...): ...
    def media_js(self, request): ...
    def wrap_account(self, social_account): ...
    def get_settings(self): ...
    def sociallogin_from_response(self, request, response): ...
    def extract_uid(self, data) -> None: ...
    def extract_extra_data(self, data): ...
    def extract_common_fields(self, data): ...
    def cleanup_email_addresses(self, email, addresses) -> None: ...
    def extract_email_addresses(self, data): ...
    @classmethod
    def get_package(cls): ...

class ProviderAccount:
    account: Incomplete
    def __init__(self, social_account) -> None: ...
    def get_profile_url(self) -> None: ...
    def get_avatar_url(self) -> None: ...
    def get_brand(self): ...
    def to_str(self): ...
